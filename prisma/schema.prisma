// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id               String            @id @default(uuid())
  name             String
  company          String
  description      String
  featured         Boolean
  image            String
  price            Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  clerkId          String
  favoriteProducts FavoriteProduct[]
  reviews          Review[]
  cartItems        CartItem[]
}

model FavoriteProduct {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId   String
}

model Review {
  id                    String   @id @default(uuid())
  clerkId               String
  productId             String
  rating                Int
  comment               String
  authorName            String
  authorProfileImageUrl String
  createdAt             DateTime @default(now())
  product               Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Cart {
  id          String     @id @default(uuid())
  clerkId     String
  itemsInCart Int        @default(0)
  cartTotal   Int        @default(0)
  shipping    Int        @default(5)
  tax         Int        @default(0)
  taxRate     Float      @default(0.1)
  orderTotal  Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItems   CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String
  cartId    String
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
